{"version":3,"sources":["Assets/Images/pikabook.png","Layout/Nav/Nav.js","Layout/Header/Header.js","Assets/Images/pikachu.png","Layout/Footer/Footer.js","API/logIn.js","Views/Login/Login.js","API/createAccount.js","Views/Registration/Registration.js","SharedFunctions/listProperties.js","SharedComponents/BookMini.js","API/fetchBooks.js","SharedFunctions/getPagination.js","SharedComponents/Pagination.js","Views/Search/Search.js","API/fetchUser.js","SharedFunctions/addBooksToList.js","SharedComponents/Book.js","SharedComponents/BookListItem.js","API/sendPoke.js","Views/User/PokeCreator.js","API/sendMessage.js","Views/User/MessageCreator.js","Views/User/User.js","Views/Me/Me.js","Views/Me/MeBooks.js","Views/Me/MeBaskets.js","Views/Conversations/ConversationRecap.js","Views/Conversations/Conversations.js","API/fetchConversations.js","API/updateConversation.js","Views/SingleConversation/SingleConversation.js","Views/Pokes/Poke.js","API/updatePoke.js","Views/Pokes/Pokes.js","API/createBasket.js","Views/Basket/BasketCreator.js","Views/Basket/Basket.js","Views/Error.js","API/fetchPokes.js","App.js","index.js"],"names":["Nav","setAccessToken","_id","loggedUser","loggedUsersPokes","loggedUsersConversations","newPokes","filter","poke","recipient","read","length","newMessages","conversation","messages","className","activeClassName","to","exact","onClick","Header","accessToken","src","logo","alt","Footer","pathname","target","pikachu","logIn","email","password","a","fetch","method","headers","Accept","body","JSON","stringify","res","ok","text","error","json","token","Login","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","status","setStatus","handleInputChange","e","id","value","handleSubmit","preventDefault","onSubmit","type","placeholder","onChange","required","createAccount","name","location","created","Registration","usernameInput","setUsernameInput","locationInput","setLocationInput","creationStatus","setCreationStatus","history","useHistory","setTimeout","push","listProperties","list","map","singleProperty","index","BookMini","book","author","ownerId","bookId","searchMyBooks","searchBooks","searchUsersBooks","url","params","URLSearchParams","Authorization","books","getPagination","page","limit","min","max","item","Pagination","setPage","scrollTo","getMaxPageNumber","result","Math","ceil","handlePageChange","maxNumber","current","scrollIntoView","behavior","block","maxPageNumber","Search","searchTitle","setSearchTitle","searchLocation","setSearchLocation","searchAuthor","setSearchAuthor","searchGenre","setSearchGenre","setBooks","useRef","genres","otherUsersBooks","bookList","ref","fetchLoggedUser","fetchUser","fetchOtherUser","user","addBooksToList","chosenBooks","checked","newBook","find","Book","publisher","year","description","handleCheckboxChange","inputDisabled","disabled","some","BookListItem","sendPoke","PokeCreator","setPokeCreatorVisible","handleConfirm","booksId","sendMessage","content","message","MessageCreator","setMessageCreatorVisible","messageContent","setMessageContent","sentMessage","setSentMessage","User","useParams","setUser","setChosenBooks","pokeCreatorVisible","messageCreatorVisible","useLocation","useEffect","getBooks","chosenBookId","state","sort","bookOne","bookTwo","getUserData","console","log","handleSendPoke","Me","MeBooks","MeBaskets","ConversationRecap","interlocutors","interlocutor","lastMessage","date","Date","toLocaleString","sender","split","slice","join","isRead","Conversations","conversationsList","b","dateA","fetchConversations","conversations","fetchConversationByInterlocutor","interlocutorsId","updateConversation","updated","Message","creationDate","SingleConversation","getLoggedUsersConversations","conversationsInterval","setMessages","prevMessages","messageInput","setMessageInput","conversationInterval","setLimit","messagesDiv","updateMessages","clearTimeout","getMessages","reverse","_","isEqual","clearInterval","interval","setInterval","scroll","scrollHeight","clientHeight","scrollToMyRef","messageList","PokeReceived","handleOnClick","PokeSent","Poke","updatePoke","Pokes","setLoggedUsersPokes","receivedPage","setReceivedPage","offeredPage","setOfferedPage","prevPokes","setPrevPokes","onPageLimit","updatedPokes","receivedPokes","offeredPokes","receivedPokesList","offeredPokesList","createBasket","targetUserID","booksOffered","booksRequested","BasketCreator","setBasketCreatorVisible","requestedBooksId","offeredBooksId","offeredBooksList","requestedBooksList","CreateBasket","offeredBooks","setOfferedBooks","myBooks","setMyBooks","basketCreatorVisible","chosenPage","setChosenPage","chosenScrollTo","myScrollTo","handleCreateBasket","chosenBooksList","myBooksList","Error","fetchPokes","pokes","App","setLoggedUser","setLoggedUsersConversations","pokesInterval","getLoggedUserData","getLoggedUsersPokes","getPokes","getConversations","path","render","Basket","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c125a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pikabook.d219f79b.png\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Nav = ({\n  setAccessToken,\n  loggedUser: { _id },\n  loggedUsersPokes,\n  loggedUsersConversations,\n}) => {\n  const handleLogOut = () => {\n    setAccessToken(\"\");\n  };\n\n  const newPokes = () => {\n    const receivedPokes = loggedUsersPokes.filter(\n      (poke) => poke.recipient._id === _id\n    );\n    return receivedPokes.filter((poke) => !poke.read).length;\n  };\n\n  const newMessages = () => {\n    return loggedUsersConversations.filter(conversation => {\n      const { read, recipient } = conversation.messages[0];\n      return !read && recipient === _id;\n    }).length;\n  };\n\n  return (\n    <div className=\"nav\">\n      <NavLink className=\"nav-item\" activeClassName=\"is-active\" to=\"/search\">\n        <i className=\"fas fa-search\"></i>\n        <span>Search</span>\n      </NavLink>\n      <NavLink\n        className=\"nav-item\"\n        activeClassName=\"is-active\"\n        to=\"/me/conversations\"\n      >\n        <i className=\"fas fa-envelope\"></i>\n        <span>Messages</span>\n        {newMessages() > 0 && <div className=\"alert\">{newMessages()}</div>}\n      </NavLink>\n      <NavLink className=\"nav-item\" activeClassName=\"is-active\" to=\"/me/basket\">\n        <i className=\"fas fa-shopping-basket\"></i>\n        <span>Baskets</span>\n      </NavLink>\n      <NavLink className=\"nav-item\" activeClassName=\"is-active\" to=\"/me\" exact>\n        <i className=\"fas fa-user-circle\"></i>\n        <span>My profile</span>\n      </NavLink>\n      <NavLink className=\"nav-item\" activeClassName=\"is-active\" to=\"/me/books\">\n        <i className=\"fas fa-book\"></i>\n        <span>My books</span>\n      </NavLink>\n      <NavLink className=\"nav-item\" activeClassName=\"is-active\" to=\"/me/pokes\">\n        <div className=\"poke\">\n          {newPokes() > 0 && <div className=\"alert\">{newPokes()}</div>}\n        </div>\n      </NavLink>\n      <NavLink className=\"nav-item log-out\" to=\"/\" onClick={handleLogOut}>\n        <i className=\"fas fa-power-off\"></i>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport logo from \"../../Assets/Images/pikabook.png\";\nimport Nav from \"../Nav/Nav\";\n\nconst Header = ({\n  setAccessToken,\n  accessToken,\n  loggedUser,\n  loggedUsersPokes,\n  loggedUsersConversations\n}) => {\n  return (\n    <div className=\"header\">\n      <img className=\"img-logo\" src={logo} alt=\"Pikabook\" />\n      {accessToken && (\n        <Nav\n          setAccessToken={setAccessToken}\n          loggedUser={loggedUser}\n          loggedUsersPokes={loggedUsersPokes}\n          loggedUsersConversations={loggedUsersConversations}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/pikachu.8624571d.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pikachu from \"../../Assets/Images/pikachu.png\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"books\"></div>\n      <div className=\"about\">\n        <p>\n          Pikabook APP is for book lovers. Are you one of them? If so,{\" \"}\n          <span>pick a book</span> you want to read. Then suggest yours you have\n          already read. That's all. <span>Connect with other bookworms!</span>\n        </p>\n        <div className=\"github\">\n        Application made as part of the <b>CodersCamp2020</b> project.\n        <br />\n        <Link\n          to={{\n            pathname:\n              \"https://github.com/lukaszdutka/CodersCamp2020.Project.FullStack-Node-React.PikaBook-frontend\",\n          }}\n          target=\"_blank\"\n        >\n          Visit Github for more information.\n        </Link>\n      </div>\n      </div>\n      <div className=\"authors\">\n        <div>\n          <b>Created by Mangosteam</b>\n          <ul>\n            <li>Mentor: Łukasz Dutka</li>\n            <li>Aleksandra Cypko</li>\n            <li>Małgorzata Dziewit</li>\n            <li>Daria Dziubałtowska</li>\n            <li>Agata Ludwiczyńska</li>\n            <li>Mariusz Smarż</li>\n          </ul>\n        </div>\n        <img src={pikachu} alt=\"pikachu\" />\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","const logIn = async (email, password) => {\n  let res = await fetch(\"https://pikabook.herokuapp.com/api/auth\", {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  if (!res.ok) {\n    res = await res.text();\n    return { error: res };\n  } else {\n    res = await res.json();\n    return { accessToken: res.token };\n  }\n};\n\nexport default logIn;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logIn from \"../../API/logIn\";\n\nconst Login = ({ setAccessToken }) => {\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [status, setStatus] = useState();\n\n  const handleInputChange = (e) => {\n    if (e.target.id === \"loginEmail\") return setEmailInput(e.target.value);\n    if (e.target.id === \"loginPassword\")\n      return setPasswordInput(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Wait...\");\n    const res = await logIn(emailInput, passwordInput);\n    if (res.error) setStatus(res.error);\n    setEmailInput(\"\");\n    setPasswordInput(\"\");\n    if (res.accessToken) {\n      setAccessToken(res.accessToken);\n    } \n  };\n\n  return (\n    <div className=\"logInAndRegistration\">\n      <form onSubmit={handleSubmit}>\n        <h1>Log in</h1>\n        <input\n          className=\"textInputDark\"\n          type=\"email\"\n          id=\"loginEmail\"\n          placeholder=\"E-mail\"\n          value={emailInput}\n          onChange={handleInputChange}\n          required\n        ></input>\n        <input\n          className=\"textInputDark\"\n          type=\"password\"\n          id=\"loginPassword\"\n          placeholder=\"Password\"\n          value={passwordInput}\n          onChange={handleInputChange}\n          required\n        ></input>\n        <input type=\"submit\" value=\"Log in\" className=\"buttonDark\"></input>\n        <div className='status'>\n          {status === \"Wait...\" ? <div className=\"loader\"></div> : status}\n        </div>\n        <p>\n          <Link to=\"/registration\">CREATE A NEW ACCOUNT!</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","export const createAccount = async (name, email, password, location) => {\n  let res = await fetch(\"https://pikabook.herokuapp.com/api/users\", {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password,\n      location,\n    }),\n  });\n  if (!res.ok) {\n    res = await res.text();\n    return { created: false, error: res };\n  } else {\n    res = await res.json();\n    return { created: true };\n  }\n};\n\nexport default createAccount;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport createAccount from \"../../API/createAccount\"\n\nconst Registration = () => {\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [locationInput, setLocationInput] = useState(\"\");\n  const [creationStatus, setCreationStatus] = useState();\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    if (e.target.id === \"registerUsername\")\n      return setUsernameInput(e.target.value);\n    if (e.target.id === \"registerEmail\") return setEmailInput(e.target.value);\n    if (e.target.id === \"registerPassword\")\n      return setPasswordInput(e.target.value);\n    if (e.target.id === \"registerLocation\")\n      return setLocationInput(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    setCreationStatus(\"Request is being sent\");\n    e.preventDefault();\n    const res = await createAccount(\n      usernameInput,\n      emailInput,\n      passwordInput,\n      locationInput\n    );\n    res.error\n      ? setCreationStatus(res.error)\n      : setCreationStatus(\"Account successfully created\");\n    setUsernameInput(\"\");\n    setEmailInput(\"\");\n    setPasswordInput(\"\");\n    setLocationInput(\"\");\n    if (res.created) {\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className=\"logInAndRegistration\"> \n      <form onSubmit={handleSubmit}>\n        <h1>Register</h1>\n        <input\n          type=\"text\"\n          className=\"textInputDark\"\n          id=\"registerUsername\"\n          placeholder=\"Name\"\n          value={usernameInput}\n          onChange={handleInputChange}\n          required\n        ></input>\n        <input\n          type=\"email\"\n          className=\"textInputDark\"\n          id=\"registerEmail\"\n          placeholder=\"E-mail\"\n          value={emailInput}\n          onChange={handleInputChange}\n          required\n        ></input>\n        <input\n          type=\"password\"\n          className=\"textInputDark\"\n          id=\"registerPassword\"\n          placeholder=\"Password\"\n          value={passwordInput}\n          onChange={handleInputChange}\n          required\n        ></input>\n        <input\n          type=\"text\"\n          className=\"textInputDark\"\n          id=\"registerLocation\"\n          placeholder=\"Location\"\n          value={locationInput}\n          onChange={handleInputChange}\n        ></input>\n        <input\n          type=\"submit\"\n          value=\"Create a new account\"\n          className=\"buttonDark\"\n        ></input>\n        <div className='status'>\n          {creationStatus === \"Request is being sent\" ? <div className=\"loader\"></div> : creationStatus}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Registration;\n","const listProperties = (list) => {\n    return list.map((singleProperty, index) => {\n      if (index < list.length - 1) return singleProperty + \", \";\n      return singleProperty;\n    });\n  };\n\n  export default listProperties","import { useHistory } from \"react-router-dom\";\nimport listProperties from \"../SharedFunctions/listProperties\";\n\nconst BookMini = ({ book: { name, author, ownerId, _id } }) => {\n  const history = useHistory();\n\n  const handleOnClick = (e) => {\n    history.push(`/user/${ownerId._id}`, {bookId: e.target.id});\n  };\n\n  return (\n    <div className=\"book\">\n      <div className=\"bookData\">\n        <h3>{name}</h3>\n        <p>{listProperties(author)}</p>\n      </div>\n      <div className=\"userData\">\n        <p>{ownerId.name}</p>\n        <p>{ownerId.location} {ownerId.location && <i className=\"fas fa-map-marker-alt\"> </i>}</p>\n      </div>\n      <input\n        className=\"buttonDark\"\n        type=\"button\"\n        value=\"User's profile\"\n        id={_id}\n        onClick={handleOnClick}\n      ></input>\n    </div>\n  );\n};\n\nexport default BookMini;\n","export const searchAllBooks = (params) => {\n  return searchBooks(\"https://pikabook.herokuapp.com/api/books?\", params);\n};\n\nexport const searchMyBooks = (accessToken) => {\n  return searchBooks(\n    \"https://pikabook.herokuapp.com/api/me/books\",\n    {},\n    accessToken\n  );\n};\n\nexport const searchUsersBooks = (id) => {\n  return searchBooks(`https://pikabook.herokuapp.com/api/users/${id}/books`);\n};\n\nexport const searchOneBook = async (id) => {\n  let res = await fetch(`https://pikabook.herokuapp.com/api/books/${id}`);\n  if (!res.ok) {\n    res = await res.text();\n    return { error: res };\n  } else {\n    res = await res.json();\n    return { book: res };\n  }\n}\n\nconst searchBooks = async (url, params = {}, accessToken = '') => {\n  let res = await fetch(url + new URLSearchParams(params), {\n    method: \"get\",\n    headers: { Authorization: `Bearer ${accessToken}`}\n  });\n  if (!res.ok) {\n    res = await res.text();\n    return { books: [], error: res };\n  } else {\n    res = await res.json();\n    return { books: res };\n  }\n};\n","const getPagination = (page, limit, list) => {\n    const min = page * limit - limit;\n    const max = min + limit - 1;\n    return list.filter((item, index) => index >= min && index <= max);\n  };\n\nexport default getPagination","const Pagination = ({ page, setPage, list, limit, scrollTo }) => {\n\n  const getMaxPageNumber = () => {\n    const result = Math.ceil(list.length / limit);\n    if (result < 1) return 1;\n    return result;\n  };\n\n  const handlePageChange = (e, type) => {\n    const maxNumber = getMaxPageNumber(limit);\n    if (type === \"next\" && page < maxNumber) setPage(page + 1);\n    if (type === \"previous\" && page > 1) setPage(page - 1);\n    if (type === \"input\") setPage(e.target.value);\n    if (scrollTo) scrollTo.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  };\n\n  const maxPageNumber = getMaxPageNumber(limit);\n\n  return (\n    <div className=\"pagination\">\n      {page > 1 && (\n        <button className=\"buttonArrow prev\" onClick={(e) => handlePageChange(e, \"previous\")}>\n          &#x2190;\n        </button>\n      )}\n      <span>Page </span>\n      <input\n        type=\"number\"\n        value={page}\n        min=\"1\"\n        max={maxPageNumber}\n        onChange={(e) => handlePageChange(e, \"input\")}\n      ></input>\n      <span> out of {maxPageNumber}</span>\n      {page < maxPageNumber && (\n        <button className=\"buttonArrow next\" onClick={(e) => handlePageChange(e, \"next\")}>&#x2192;</button>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { useState, useRef } from \"react\";\nimport Book from \"../../SharedComponents/BookMini\";\nimport { searchAllBooks } from \"../../API/fetchBooks\";\nimport getPagination from \"../../SharedFunctions/getPagination\";\nimport Pagination from \"../../SharedComponents/Pagination\";\n\nconst Search = ({ loggedUser }) => {\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [searchLocation, setSearchLocation] = useState(\"\");\n  const [searchAuthor, setSearchAuthor] = useState(\"\");\n  const [searchGenre, setSearchGenre] = useState(\"\");\n  const [books, setBooks] = useState([]);\n  const [status, setStatus] = useState(\"Let's start searching!\");\n  const [page, setPage] = useState(1);\n  const onPageLimit = 10;\n  const scrollTo = useRef();\n\n  const handleInputChange = (e) => {\n    if (e.target.id === \"searchTitle\") return setSearchTitle(e.target.value);\n    if (e.target.id === \"searchAuthor\") return setSearchAuthor(e.target.value);\n    if (e.target.id === \"searchGenre\") return setSearchGenre(e.target.value);\n    if (e.target.id === \"searchLocation\")\n      return setSearchLocation(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Searching...\");\n    setPage(1);\n    const res = await searchAllBooks({\n      name: searchTitle,\n      location: searchLocation,\n      author: searchAuthor, \n      genres: searchGenre\n    });\n    if (res.error) setStatus(res.error);\n    const otherUsersBooks = res.books.filter(\n      (book) => book.ownerId._id !== loggedUser._id\n    );\n    setBooks(otherUsersBooks);\n    otherUsersBooks.length === 0\n      ? setStatus(\"No books found\")\n      : setStatus(`${otherUsersBooks.length} book(s) found`);\n  };\n\n  let bookList = getPagination(page, onPageLimit, books);\n  bookList = bookList.map((book) => <Book key={book._id} book={book} />);\n\n  return (\n    <div className=\"search\">\n      <div className=\"logInAndRegistration\">\n        <form onSubmit={handleSubmit}>\n          <input\n            className=\"textInputDark\"\n            type=\"text\"\n            id=\"searchTitle\"\n            placeholder=\"Book's title\"\n            value={searchTitle}\n            onChange={handleInputChange}\n          ></input>\n          <input\n            className=\"textInputDark\"\n            type=\"text\"\n            id=\"searchAuthor\"\n            placeholder=\"Book's author\"\n            value={searchAuthor}\n            onChange={handleInputChange}\n          ></input>\n          <input\n            className=\"textInputDark\"\n            type=\"text\"\n            id=\"searchGenre\"\n            placeholder=\"Book's genre\"\n            value={searchGenre}\n            onChange={handleInputChange}\n          ></input>\n          <input\n            className=\"textInputDark\"\n            type=\"text\"\n            id=\"searchLocation\"\n            placeholder=\"Location\"\n            value={searchLocation}\n            onChange={handleInputChange}\n          ></input>\n          <input className=\"buttonDark\" type=\"submit\" value=\"Search\"></input>\n          <div className=\"status\">\n            {status === \"Searching...\" ? (\n              <div className=\"loader\"></div>\n            ) : (\n              status\n            )}\n          </div>\n        </form>\n      </div>\n      <div ref={scrollTo}>\n        {books.length > onPageLimit && (\n          <Pagination\n            page={page}\n            setPage={setPage}\n            list={books}\n            limit={onPageLimit}\n            scrollTo={scrollTo}\n          />\n        )}\n        <div className=\"booksList\">{bookList}</div>\n        {books.length > onPageLimit && (\n          <Pagination\n            page={page}\n            setPage={setPage}\n            list={books}\n            limit={onPageLimit}\n            scrollTo={scrollTo}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","export const fetchLoggedUser = (accessToken) => {\n  return fetchUser(\"https://pikabook.herokuapp.com/api/me\", accessToken);\n};\n\nexport const fetchOtherUser = (id) => {\n  return fetchUser(`https://pikabook.herokuapp.com/api/users/${id}`);\n};\n\nconst fetchUser = async (url, accessToken) => {\n  let res = await fetch(url, {\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n  if (!res.ok) {\n    res = await res.text();\n    return { error: res };\n  } else {\n    res = await res.json();\n    return { user: res };\n  }\n};\n","const addBooksToList = (e, books, chosenBooks) => {\n  if (!e.target.checked) {\n    return chosenBooks.filter((book) => book._id !== e.target.id);\n  }\n  if (e.target.checked) {\n    const newBook = books.find((book) => book._id === e.target.id);\n    return [...chosenBooks, newBook];\n  }\n};\n\nexport default addBooksToList;\n","import listProperties from \"../SharedFunctions/listProperties\";\n\nconst Book = ({\n  book: { _id, name, author, genres, publisher, year, description },\n  type,\n  handleCheckboxChange,\n  inputDisabled,\n  chosenBooks,\n}) => {\n  return (\n    <div className=\"bookContainer\">\n      <div className=\"bookInfo\">\n        <p className=\"bookTitle\">\n          <b>{name}</b>\n        </p>\n        {author.length > 0 && (\n          <p className=\"author\">\n            <b>Author:</b> {listProperties(author)}\n          </p>\n        )}\n        {publisher && (\n          <p className=\"publisher\">\n            <b>Publisher:</b> {publisher}\n          </p>\n        )}\n        {year && (\n          <p className=\"year\">\n            <b>Publication year:</b> {year}\n          </p>\n        )}\n        {genres.length > 0 && (\n          <p className=\"genres\">\n            <b>Genre:</b> {listProperties(genres)}\n          </p>\n        )}\n        {description && (\n          <p className=\"description\">\n            <b>Description:</b> {description}\n          </p>\n        )}\n      </div>\n      {type === \"checkbox\" && (\n        <input\n          className=\"checkboxStyled\"\n          type=\"checkbox\"\n          onChange={handleCheckboxChange}\n          id={_id}\n          disabled={inputDisabled}\n          checked={chosenBooks.some((book) =>\n            book._id === _id ? true : false\n          )}\n        ></input>\n      )}\n    </div>\n  );\n};\n\nexport default Book;\n","import listProperties from \"../SharedFunctions/listProperties\";\n\nconst BookListItem = ( { book: { name, author, publisher, year, _id } }) => {\n    return (\n      <li key={_id}>\n        <b>{name}</b>\n        {author.length > 0 && ` by ${listProperties(author)}`} {publisher}{\" \"}\n        {year}\n      </li>\n    );\n}\n \nexport default BookListItem;\n","export const sendPoke = async (accessToken, recipient, books) => {\n  let res = await fetch(\"https://pikabook.herokuapp.com/api/pokes\", {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      recipient,\n      books,\n    }),\n  });\n  if (!res.ok) {\n    res = await res.text();\n    return { error: res };\n  } else {\n    res = await res.json();\n    return { created: true };\n  }\n};\n\nexport default sendPoke;\n","import { useState } from \"react\";\n\nimport BookListItem from \"../../SharedComponents/BookListItem\";\nimport sendPoke from \"../../API/sendPoke\";\n\nconst PokeCreator = ({\n  accessToken,\n  books,\n  recipient,\n  setPokeCreatorVisible,\n}) => {\n  const [status, setStatus] = useState(\"\");\n\n  const handleConfirm = async () => {\n    const booksId = books.map((book) => book._id);\n    const res = await sendPoke(accessToken, recipient._id, booksId);\n    if (res.error) setStatus(res.error);\n    if (res.created) setStatus(\"Poke successfully sent!\");\n  };\n\n  const handleCancel = () => {\n    setPokeCreatorVisible(false);\n  };\n\n  const bookList = books.map((book) => (\n    <BookListItem key={book._id} book={book} />\n  ));\n\n  return (\n    <div className=\"creatorContainer\" id=\"pokeCreator\">\n      {!status && (\n        <>\n          <p>\n            Invite {<b>{recipient.name}</b>} to browse your book collection and make\n            him/her know that you showed interest in the following books in\n            their possession:\n          </p>\n          <ul>{bookList.length > 0 ? bookList : \"None\"}</ul>\n        </>\n      )}\n      {status && (\n        <p>\n          <b>{status}</b>\n        </p>\n      )}\n      <div>\n        {!status && (\n          <button className=\"buttonDark\" onClick={handleConfirm}>\n            Confirm\n          </button>\n        )}\n        <button className=\"buttonDark\" onClick={handleCancel}>\n          {status ? \"Back\" : \"Cancel\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PokeCreator;\n","export const sendMessage = async (accessToken, recipient, content) => {\n  let res = await fetch(\"https://pikabook.herokuapp.com/api/conversations\", {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      recipient,\n      content,\n    }),\n  });\n  if (!res.ok) {\n    res = await res.text();\n    return { created: false, error: res };\n  } else {\n    res = await res.json();\n    return { created: true, message: res.content };\n  }\n};\n\nexport default sendMessage;\n","import { useState } from \"react\";\n\nimport sendMessage from \"../../API/sendMessage\";\n\nconst MessageCreator = ({\n  accessToken,\n  recipient,\n  setMessageCreatorVisible,\n}) => {\n  const [messageContent, setMessageContent] = useState(\"\");\n  const [sentMessage, setSentMessage] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const handleTextareaChange = (e) => {\n    setMessageContent(e.target.value);\n  };\n\n  const handleConfirm = async () => {\n    const res = await sendMessage(accessToken, recipient._id, messageContent);\n    if (res.error) setStatus(res.error);\n    if (res.created) setStatus(\"Message successfully sent!\");\n    if (res.message) setSentMessage(res.message);\n  };\n\n  const handleCancel = () => {\n    setMessageCreatorVisible(false);\n  };\n\n  return (\n    <div className=\"creatorContainer\" id=\"messageCreator\">\n      <h1>Send a message to {recipient.name}</h1>\n      {sentMessage ? (\n        <>\n          <p className=\"sentMessage\">{sentMessage}</p>\n        </>\n      ) : (\n        <textarea\n          onChange={handleTextareaChange}\n          value={messageContent}\n        ></textarea>\n      )}\n      {status && (\n        <p>\n          <b>{status}</b>\n        </p>\n      )}\n      <div>\n        {!sentMessage && (\n          <button className=\"buttonDark\" onClick={handleConfirm}>\n            Confirm\n          </button>\n        )}\n        <button className=\"buttonDark\" onClick={handleCancel}>\n          {sentMessage ? \"Back\" : \"Cancel\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageCreator;\n","import { useState, useEffect, useRef } from \"react\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\n\nimport { searchUsersBooks } from \"../../API/fetchBooks\";\nimport { fetchOtherUser } from \"../../API/fetchUser\";\nimport addBooksToList from \"../../SharedFunctions/addBooksToList\";\nimport Book from \"../../SharedComponents/Book\";\nimport PokeCreator from \"./PokeCreator\";\nimport MessageCreator from \"./MessageCreator\";\nimport getPagination from \"../../SharedFunctions/getPagination\";\nimport Pagination from \"../../SharedComponents/Pagination\";\n\nconst User = ({ accessToken }) => {\n  const { id } = useParams();\n  const [books, setBooks] = useState([]);\n  const [user, setUser] = useState(\"\");\n  const [chosenBooks, setChosenBooks] = useState([]);\n  const [pokeCreatorVisible, setPokeCreatorVisible] = useState(false);\n  const [messageCreatorVisible, setMessageCreatorVisible] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const onPageLimit = 4;\n  const scrollTo = useRef();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus(\"Loading...\");\n    const getBooks = async () => {\n      const chosenBookId = location.state.bookId;\n      const res = await searchUsersBooks(id);\n      if (res.error) setStatus(res.error);\n      if (res.books) {\n        const bookList = res.books.sort((bookOne, bookTwo) => {\n          return bookOne._id === chosenBookId\n            ? -1\n            : bookTwo._id === chosenBookId\n            ? 1\n            : 0;\n        });\n        setBooks(bookList);\n        setStatus(\"\");\n      }\n    };\n    const getUserData = async () => {\n      const res = await fetchOtherUser(id);\n      if (res.error) console.log(res.error);\n      if (res.user) {\n        setUser(res.user);\n      }\n    };\n    getBooks();\n    getUserData();\n  }, [id, location.state.bookId]);\n\n  const handleSendMessage = () => {\n    !pokeCreatorVisible && setMessageCreatorVisible(true);\n  };\n\n  const handleSendPoke = async () => {\n    !messageCreatorVisible && setPokeCreatorVisible(true);\n  };\n\n  const handleCreateBasket = () => {\n    history.push(\"/basket\", { chosenBooks, user });\n  };\n\n  const handleCheckboxChange = (e) => {\n    setChosenBooks(addBooksToList(e, books, chosenBooks));\n  };\n\n  let bookList = getPagination(page, onPageLimit, books);\n  bookList = bookList.map((book) => (\n    <Book\n      key={book._id}\n      book={book}\n      type=\"checkbox\"\n      handleCheckboxChange={handleCheckboxChange}\n      inputDisabled={pokeCreatorVisible || messageCreatorVisible}\n      chosenBooks={chosenBooks}\n    />\n  ));\n\n  return (\n    <div className=\"userContainer\">\n      <div className=\"usersBooks\" ref={scrollTo}>\n        <h1 className=\"booksHeading\">Books</h1>\n        {status ? status : bookList}\n        {books.length > onPageLimit && (\n          <Pagination\n            page={page}\n            setPage={setPage}\n            list={books}\n            limit={onPageLimit}\n            scrollTo={scrollTo}\n          />\n        )}\n      </div>\n      <div className=\"userPanel\">\n        <div className=\"userInfo\">\n          <p>{user.name}</p>\n          {user.location && (\n            <p>\n              <i className=\"fas fa-map-marker-alt\"></i> {user.location}\n            </p>\n          )}\n          <button className=\"buttonDark\" onClick={handleSendMessage}>\n            Send message\n          </button>\n        </div>\n        <div className=\"userInfo\">\n          <button\n            className=\"buttonDark\"\n            onClick={handleCreateBasket}\n            disabled={chosenBooks.length < 1}\n          >\n            Add to basket\n          </button>\n          <p className=\"or\">OR</p>\n          <button className=\"buttonDark\" onClick={handleSendPoke}>\n            Create poke\n          </button>\n        </div>\n      </div>\n      {pokeCreatorVisible && (\n        <PokeCreator\n          accessToken={accessToken}\n          recipient={user}\n          books={chosenBooks}\n          setPokeCreatorVisible={setPokeCreatorVisible}\n        />\n      )}\n      {messageCreatorVisible && (\n        <MessageCreator\n          accessToken={accessToken}\n          recipient={user}\n          setMessageCreatorVisible={setMessageCreatorVisible}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react'\n\nconst Me  = () => {\n    return ( \n        <div>\n            Me\n        </div>\n      );\n}\n \nexport default Me;","import React from 'react'\n\nconst MeBooks  = () => {\n    return ( \n        <div>\n            Me_Books\n        </div>\n      );\n}\n \nexport default MeBooks;","import React from 'react'\n\nconst MeBaskets  = () => {\n    return ( \n        <div>\n            Me_Baskets\n        </div>\n      );\n}\n \nexport default MeBaskets;","import { useHistory } from \"react-router-dom\";\n\nconst ConversationRecap = ({\n  conversation: { interlocutors, messages },\n  loggedUser,\n}) => {\n  const history = useHistory();\n  const interlocutor = interlocutors.find(\n    (interlocutor) => interlocutor._id !== loggedUser._id\n  );\n  const lastMessage = messages[0];\n  const date = new Date(lastMessage.date).toLocaleString();\n  const sender =\n    lastMessage.sender === interlocutor._id ? interlocutor.name : \"You\";\n  const content = lastMessage.content.split(\" \").slice(0, 5).join(\" \");\n\n  const openConversation = () => {\n    history.push(`/me/conversations/conversation`, { interlocutor });\n  };\n\n  const isRead = !lastMessage.read && lastMessage.recipient === loggedUser._id;\n\n  return (\n    <div className={isRead ? \"newMessage\" : \"\"}>\n      <div>\n        <b>{interlocutor.name}</b>\n      </div>\n      <div>{date}</div>\n      <div>\n        <b>{sender}</b> wrote:{\" \"}\n        {content === lastMessage.content ? content : `${content}...`}\n      </div>\n      <button onClick={openConversation}>Go to conversation</button>\n    </div>\n  );\n};\n\nexport default ConversationRecap;\n","import { useState, useRef } from \"react\";\n\nimport ConversationRecap from \"./ConversationRecap\";\nimport getPagination from \"../../SharedFunctions/getPagination\";\nimport Pagination from \"../../SharedComponents/Pagination\";\n\nconst Conversations = ({\n  loggedUser,\n  loggedUsersConversations,\n}) => {\n\n  const [page, setPage] = useState(1);\n  const onPageLimit = 10;\n  const scrollTo = useRef();\n\n  let conversationsList = loggedUsersConversations.sort((a,b) => {\n    const dateA = new Date(a.messages[0].date);\n    const dateB = new Date(b.messages[0].date);\n    return dateB - dateA;\n  });\n  conversationsList = getPagination(page, onPageLimit, conversationsList);\n  conversationsList = conversationsList.map((conversation) => {\n    return (\n      <ConversationRecap\n        key={conversation._id}\n        conversation={conversation}\n        loggedUser={loggedUser}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <h1>My conversations</h1>\n      <div ref={scrollTo}>\n        {loggedUsersConversations.length > onPageLimit && (\n          <Pagination\n            page={page}\n            setPage={setPage}\n            list={loggedUsersConversations}\n            limit={onPageLimit}\n            scrollTo={scrollTo}\n          />\n        )}\n        </div>\n      <div>{conversationsList}</div>\n      {loggedUsersConversations.length > onPageLimit && (\n          <Pagination\n            page={page}\n            setPage={setPage}\n            list={loggedUsersConversations}\n            limit={onPageLimit}\n            scrollTo={scrollTo}\n          />\n        )}\n    </div>\n  );\n};\n\nexport default Conversations;\n","export const fetchConversations = async (accessToken) => {\n  let res = await fetch(\"https://pikabook.herokuapp.com/api/me/conversations\", {\n    method: \"get\",\n    headers: { Authorization: `Bearer ${accessToken}` },\n  });\n  if (!res.ok) {\n    res = await res.text();\n    return { error: res };\n  } else {\n    res = await res.json();\n    return { conversations: res };\n  }\n};\n\nexport const fetchConversationByInterlocutor = async (\n  accessToken,\n  interlocutorsId,\n  params\n) => {\n  let res = await fetch(\n    `https://pikabook.herokuapp.com/api/me/conversations/${interlocutorsId}?` +\n      new URLSearchParams(params),\n    {\n      method: \"get\",\n      headers: { Authorization: `Bearer ${accessToken}` },\n    }\n  );\n  if (!res.ok) {\n    res = await res.text();\n    return { error: res };\n  } else {\n    res = await res.json();\n    return { conversation: res };\n  }\n};\n","export const updateConversation = async (accessToken, id) => {\n    let res = await fetch(`https://pikabook.herokuapp.com/api/conversations/${id}`, {\n      method: \"put\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    if (!res.ok) {\n      res = await res.text();\n      return { error: res };\n    } else {\n      res = await res.json();\n      return { updated: true };\n    }\n  };\n  \n  export default updateConversation;\n  ","import { useLocation, useHistory } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from \"react\";\nimport _ from \"lodash\";\n\nimport { fetchConversationByInterlocutor } from \"../../API/fetchConversations\";\nimport { updateConversation } from \"../../API/updateConversation\";\nimport sendMessage from \"../../API/sendMessage\";\n\nconst Message = ({ message: { sender, content, date }, interlocutor }) => {\n  const creationDate = new Date(date).toLocaleString();\n  const name = interlocutor._id === sender ? `${interlocutor.name}:` : \"You:\";\n  return (\n    <div className={name === \"You:\" ? \"yourMessage\" : \"interlocutorsMessage\"}>\n      <div>{creationDate}</div>\n      <div>\n        <div>{name}</div>\n        <div>{content}</div>\n      </div>\n    </div>\n  );\n};\n\nconst SingleConversation = ({\n  accessToken,\n  getLoggedUsersConversations,\n  conversationsInterval,\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const interlocutor = location.state.interlocutor;\n  const [messages, setMessages] = useState([]);\n  const prevMessages = useRef();\n  const [messageInput, setMessageInput] = useState(\"\");\n  const conversationInterval = useRef();\n  const [limit, setLimit] = useState(10);\n  const [status, setStatus] = useState(\"\");\n  const messagesDiv = useRef();\n\n  useEffect(() => {\n    const updateMessages = async (conversation) => {\n      if (conversation.some((message) => !message.read))\n        await updateConversation(accessToken, interlocutor._id);\n      clearTimeout(conversationsInterval.current);\n      getLoggedUsersConversations(accessToken);\n    };\n    const getMessages = async () => {\n      setStatus(\"Loading...\");\n      prevMessages.current = messages;\n      const res = await fetchConversationByInterlocutor(\n        accessToken,\n        interlocutor._id,\n        { limit }\n      );\n      if (res.error) setStatus(res.error);\n      const newMessages = res.conversation.messages.reverse();\n      if (!_.isEqual(newMessages, prevMessages.current)) {\n        setMessages(newMessages);\n        updateMessages(newMessages);\n      }\n    };\n    clearInterval(conversationInterval.current);\n    getMessages();\n    const interval = setInterval(async () => getMessages(), 1000);\n    conversationInterval.current = interval;\n    return () => clearInterval(conversationInterval.current);\n  }, [\n    accessToken,\n    interlocutor._id,\n    limit,\n    messages,\n    getLoggedUsersConversations,\n    conversationsInterval,\n  ]);\n\n  useEffect(() => {\n    const scrollTo = messagesDiv.current;\n    const scrollToMyRef = () => {\n      const scroll = scrollTo.scrollHeight - scrollTo.clientHeight;\n      scrollTo.scrollTo(0, scroll);\n    };\n    scrollToMyRef();\n  }, [messages]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const res = await sendMessage(accessToken, interlocutor._id, messageInput);\n    if (res.error) setStatus(res.error);\n    setMessageInput(\"\");\n  };\n\n  const handleChange = (e) => {\n    setMessageInput(e.target.value);\n  };\n\n  const handleLoadMore = (e) => {\n    setLimit(limit + 10);\n  };\n\n  const handleExit = () => {\n    history.push(\"/me/conversations\");\n  };\n\n  const messageList = messages.map((message) => (\n    <Message key={message._id} message={message} interlocutor={interlocutor} />\n  ));\n\n  return (\n    <div className=\"singleConversationContainer\">\n      <div onClick={handleExit}>&#10006;</div>\n      <button onClick={handleLoadMore}>&#x2191;</button>\n      <div className=\"messagesList\" ref={messagesDiv}>\n        {messages.length === 0 ? status : messageList}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <textarea onChange={handleChange} value={messageInput}></textarea>\n        <input type=\"submit\" value=\"Send\"></input>\n      </form>\n    </div>\n  );\n};\n\nexport default SingleConversation;\n","import { useHistory } from \"react-router-dom\";\n\nimport BookListItem from \"../../SharedComponents/BookListItem\";\n\nconst PokeReceived = ({ bookList, creationDate, sender, read, handleOnClick }) => {\n  return (\n    <div className={!read && \"newPoke\"}>\n      {bookList.length > 0 ? (\n        <>\n          <p>\n            On {creationDate} <b>{sender.name}</b> showed interest in the\n            following books in your collection:\n          </p>\n          <ul>{bookList}</ul>\n          <p>and invited you to browse his/hers collection.</p>{\" \"}\n        </>\n      ) : (\n        <p>\n          On {creationDate} <b>{sender.name}</b> showed interest in your\n          collection and invited you to browse his/hers collection\n        </p>\n      )}\n      <button onClick={handleOnClick}>\n        Visit <b>{sender.name}</b>'s profile\n      </button>\n    </div>\n  );\n};\n\nconst PokeSent = ({\n  bookList,\n  creationDate,\n  recipient,\n  handleOnClick,\n}) => {\n  return (\n    <div>\n      {bookList.length > 0 ? (\n        <>\n          <p>\n            On {creationDate} you showed interest in the following books in{\" \"}\n            <b>{recipient.name}</b>'s collection:\n          </p>\n          <ul>{bookList}</ul>\n          <p>and invited him/her to browse your collection.</p>{\" \"}\n        </>\n      ) : (\n        <p>\n          On {creationDate} you showed interest in <b>{recipient.name}</b>'s'\n          collection and invited you him/her browse your collection.\n        </p>\n      )}\n      <button onClick={handleOnClick}>\n        Visit <b>{recipient.name}</b>'s profile\n      </button>\n    </div>\n  );\n};\n\nconst Poke = ({ poke: { sender, recipient, books, date, read }, type }) => {\n  const history = useHistory();\n  const creationDate = new Date(date).toLocaleString();\n\n  const handleOnClick = () => {\n    if (type === 'offered') history.push(`/user/${sender._id}`, { bookId: \"\" });\n    if (type === 'sent') history.push(`/user/${recipient._id}`, { bookId: \"\" });\n  };\n\n  const bookList = books.map((book) => (\n    <BookListItem key={book._id} book={book} />\n  ));\n\n  return (\n    <div>\n      {type === \"received\" && (\n        <PokeReceived\n          bookList={bookList}\n          creationDate={creationDate}\n          sender={sender}\n          read={read}\n          handleOnClick={handleOnClick}\n        />\n      )}\n      {type === \"sent\" && (\n        <PokeSent\n          bookList={bookList}\n          creationDate={creationDate}\n          recipient={recipient}\n          handleOnClick={handleOnClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Poke;\n","export const updatePoke = async (accessToken, id) => {\n    let res = await fetch(`https://pikabook.herokuapp.com/api/pokes/${id}`, {\n      method: \"put\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    if (!res.ok) {\n      res = await res.text();\n      return { error: res };\n    } else {\n      res = await res.json();\n      return { updated: true };\n    }\n  };\n  \n  export default updatePoke;\n  ","import { useEffect, useState } from \"react\";\nimport Poke from \"./Poke\";\nimport getPagination from \"../../SharedFunctions/getPagination\";\nimport Pagination from \"../../SharedComponents/Pagination\";\nimport updatePoke from \"../../API/updatePoke\";\n\nconst Pokes = ({\n  accessToken,\n  loggedUsersPokes,\n  setLoggedUsersPokes,\n  loggedUser: { _id },\n}) => {\n  const [receivedPage, setReceivedPage] = useState(1);\n  const [offeredPage, setOfferedPage] = useState(1);\n  const [prevPokes, setPrevPokes] = useState([]);\n  const onPageLimit = 10;\n\n  useEffect(() => {\n    if (loggedUsersPokes.length !== prevPokes.length)\n      setPrevPokes(loggedUsersPokes);\n    const receivedPokes = loggedUsersPokes.filter(\n      (poke) => poke.recipient._id === _id\n    );\n    if (receivedPokes.some((poke) => !poke.read)) {\n      const updatedPokes = loggedUsersPokes.map((poke) => {\n        updatePoke(accessToken, poke._id);\n        return { ...poke, read: true };\n      });\n      setLoggedUsersPokes(updatedPokes);\n    }\n  }, [accessToken, loggedUsersPokes, setLoggedUsersPokes, prevPokes, _id]);\n\n  const receivedPokes = prevPokes.filter((poke) => poke.recipient._id === _id);\n\n  const offeredPokes = prevPokes.filter((poke) => poke.sender._id === _id);\n\n  let receivedPokesList = getPagination(\n    receivedPage,\n    onPageLimit,\n    receivedPokes\n  );\n  receivedPokesList = receivedPokesList.map((poke) => {\n    return <Poke key={poke._id} poke={poke} type=\"received\" />;\n  });\n\n  let offeredPokesList = getPagination(offeredPage, onPageLimit, offeredPokes);\n  offeredPokesList = offeredPokesList.map((poke) => {\n    return <Poke key={poke._id} poke={poke} type=\"sent\" />;\n  });\n\n  return (\n    <div className=\"pokesContainer\">\n      <div>\n        <h1>Pokes received:</h1>\n        {receivedPokes.length > onPageLimit && (\n          <Pagination\n            page={receivedPage}\n            setPage={setReceivedPage}\n            list={receivedPokes}\n            limit={onPageLimit}\n          />\n        )}\n        <div>{receivedPokesList}</div>\n        {receivedPokes.length > onPageLimit && (\n          <Pagination\n            page={receivedPage}\n            setPage={setReceivedPage}\n            list={receivedPokes}\n            limit={onPageLimit}\n          />\n        )}\n      </div>\n      <div>\n        {offeredPokes.length > onPageLimit && (\n          <Pagination\n            page={offeredPage}\n            setPage={setOfferedPage}\n            list={offeredPokes}\n            limit={onPageLimit}\n          />\n        )}\n        <h1>Pokes sent:</h1>\n        <div>{offeredPokesList}</div>\n        {offeredPokes.length > onPageLimit && (\n          <Pagination\n            page={offeredPage}\n            setPage={setOfferedPage}\n            list={offeredPokes}\n            limit={onPageLimit}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Pokes;\n","export const createBasket = async (\n  accessToken,\n  targetUserID,\n  booksOffered,\n  booksRequested\n) => {\n  let res = await fetch(\"https://pikabook.herokuapp.com/api/baskets\", {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      targetUserID,\n      booksOffered,\n      booksRequested,\n    }),\n  });\n  if (!res.ok) {\n    res = await res.text();\n    return { error: res };\n  } else {\n    res = await res.json();\n    return { created: true };\n  }\n};\n\nexport default createBasket;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport createBasket from \"../../API/createBasket\";\nimport BookListItem from \"../../SharedComponents/BookListItem\";\n\nconst BasketCreator = ({\n  accessToken,\n  recipient,\n  booksOffered,\n  booksRequested,\n  setBasketCreatorVisible,\n}) => {\n  const [status, setStatus] = useState(\"\");\n  const history = useHistory();\n\n  const handleConfirm = async () => {\n    const requestedBooksId = booksRequested.map((book) => book._id);\n    const offeredBooksId = booksOffered.map((book) => book._id);\n    const res = await createBasket(\n      accessToken,\n      recipient._id,\n      offeredBooksId,\n      requestedBooksId\n    );\n    if (res.error) setStatus(res.error);\n    if (res.created) setStatus(\"Offer successfully sent!\");\n    setTimeout(() => history.push(\"/me/basket\"), 1000);\n  };\n\n  const handleCancel = () => {\n    setBasketCreatorVisible(false);\n  };\n\n  const offeredBooksList = booksOffered.map((book) => (\n    <BookListItem key={book._id} book={book} />\n  ));\n\n  const requestedBooksList = booksRequested.map((book) => (\n    <BookListItem key={book._id} book={book} />\n  ));\n\n  return (\n    <div className=\"creatorContainer\" id=\"basketCreator\">\n      {!status && (\n        <>\n          <p>\n            Confirm that you want to send {recipient.name} an offer to exchange\n            your books:\n          </p>\n          <ul>{offeredBooksList}</ul>\n          <p>against his/her books</p>\n          <ul>{requestedBooksList}</ul>\n        </>\n      )}\n        {status && <p><b>{status}</b></p>}\n      <div>\n        {!status && <button className=\"buttonDark\" onClick={handleConfirm}>Confirm</button>}\n        {!status && <button className=\"buttonDark\" onClick={handleCancel}>Cancel</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default BasketCreator;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { searchMyBooks } from \"../../API/fetchBooks\";\nimport { useRef } from \"react\";\n\nimport Book from \"../../SharedComponents/Book\";\nimport BasketCreator from \"./BasketCreator\";\nimport addBooksToList from \"../../SharedFunctions/addBooksToList\";\nimport getPagination from \"../../SharedFunctions/getPagination\";\nimport Pagination from \"../../SharedComponents/Pagination\";\n\nconst CreateBasket = ({ accessToken }) => {\n  const location = useLocation();\n  const user = location.state.user;\n  const chosenBooks = location.state.chosenBooks;\n  const [offeredBooks, setOfferedBooks] = useState([]);\n  const [myBooks, setMyBooks] = useState([]);\n  const [basketCreatorVisible, setBasketCreatorVisible] = useState(false);\n  const [chosenPage, setChosenPage] = useState(1);\n  const [offeredPage, setOfferedPage] = useState(1);\n  const onPageLimit = 10;\n  const chosenScrollTo = useRef();\n  const myScrollTo= useRef();\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await searchMyBooks(accessToken);\n      if (res.error) console.log(res.error);\n      if (res.books) setMyBooks(res.books);\n    };\n    getBooks();\n  }, [accessToken]);\n\n  const handleCheckboxChange = (e) => {\n    setOfferedBooks(addBooksToList(e, myBooks, offeredBooks));\n  };\n\n  const handleCreateBasket = async () => {\n    setBasketCreatorVisible(true);\n  };\n\n  let chosenBooksList = getPagination(chosenPage, onPageLimit, chosenBooks);\n  chosenBooksList = chosenBooksList.map((book) => (\n    <Book key={book._id} book={book} />\n  ));\n\n  let myBooksList = getPagination(offeredPage, onPageLimit, myBooks);\n  myBooksList = myBooksList.map((book) => (\n    <Book\n      key={book._id}\n      book={book}\n      type=\"checkbox\"\n      handleCheckboxChange={handleCheckboxChange}\n      inputDisabled={basketCreatorVisible}\n      chosenBooks={offeredBooks}\n    />\n  ));\n\n  return (\n    <div className=\"createBasketContainer\">\n      <div className=\"basketBookList\" ref={chosenScrollTo}>\n        <div className=\"basketChosenBooks\">\n          <h1 className=\"booksHeading\">{user.name}'s books</h1>\n          {chosenBooksList}\n          {chosenBooks.length > onPageLimit && (\n            <Pagination\n              page={chosenPage}\n              setPage={setChosenPage}\n              list={chosenBooks}\n              limit={onPageLimit}\n              scrollTo={chosenScrollTo}\n            />\n          )}\n        </div>\n        <div className=\"basketMyBooks\" ref={myScrollTo}>\n          <h1 className=\"booksHeading\">My books</h1>\n          {myBooksList}\n          {myBooks.length > onPageLimit && (\n            <Pagination\n              page={offeredPage}\n              setPage={setOfferedPage}\n              list={myBooks}\n              limit={onPageLimit}\n              scrollTo={myScrollTo}\n            />\n          )}\n        </div>\n      </div>\n      <button\n        className=\"buttonDark\"\n        onClick={handleCreateBasket}\n        disabled={offeredBooks.length < 1}\n      >\n        Create a basket\n      </button>\n      {basketCreatorVisible && (\n        <BasketCreator\n          accessToken={accessToken}\n          booksOffered={offeredBooks}\n          booksRequested={chosenBooks}\n          recipient={user}\n          setBasketCreatorVisible={setBasketCreatorVisible}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CreateBasket;\n","import React from 'react';\n\nconst Error = () => {\n    return ( \n        <div>\n            Page does not exist.\n        </div>\n     );\n}\n \nexport default Error;","const fetchPokes = async (accessToken) => {\n    let res = await fetch(\"https://pikabook.herokuapp.com/api/me/pokes\", {\n      method: \"get\",\n      headers: { Authorization: `Bearer ${accessToken}` },\n    });\n    if (!res.ok) {\n      res = await res.text();\n      return { error: res };\n    } else {\n      res = await res.json();\n      return { pokes: res };\n    }\n  };\n\n  export default fetchPokes","import { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\n\nimport Header from \"./Layout/Header/Header\";\nimport Footer from \"./Layout/Footer/Footer\";\nimport Login from \"./Views/Login/Login\";\nimport Registartion from \"./Views/Registration/Registration\";\nimport Search from \"./Views/Search/Search\";\nimport User from \"./Views/User/User\";\nimport Me from \"./Views/Me/Me\";\nimport MeBooks from \"./Views/Me/MeBooks\";\nimport MeBaskets from \"./Views/Me/MeBaskets\";\nimport Conversations from \"./Views/Conversations/Conversations\";\nimport SingleConversation from \"./Views/SingleConversation/SingleConversation\";\nimport Pokes from \"./Views/Pokes/Pokes\";\nimport Basket from \"./Views/Basket/Basket\";\nimport Error from \"./Views/Error\";\n\nimport fetchPokes from \"./API/fetchPokes\";\nimport { fetchLoggedUser } from \"./API/fetchUser\";\nimport { fetchConversations } from \"./API/fetchConversations\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [loggedUser, setLoggedUser] = useState({});\n  const [loggedUsersPokes, setLoggedUsersPokes] = useState([]);\n  const [loggedUsersConversations, setLoggedUsersConversations] = useState([]);\n  const pokesInterval = useRef();\n  const conversationsInterval = useRef();\n\n  useEffect(() => {\n    clearInterval(pokesInterval.current);\n    clearInterval(conversationsInterval.current);\n    if (accessToken) {\n      getLoggedUserData(accessToken);\n      getLoggedUsersPokes(accessToken);\n      getLoggedUsersConversations(accessToken);\n    }\n    if (!accessToken) {\n      setLoggedUsersPokes([]);\n      setLoggedUser({});\n      setLoggedUsersConversations([]);\n    }\n  }, [accessToken]);\n\n  const getLoggedUserData = async (accessToken) => {\n    const res = await fetchLoggedUser(accessToken);\n    if (res.error) console.log(res.error);\n    if (res.user) setLoggedUser(res.user);\n  };\n\n  const getLoggedUsersPokes = async (accessToken) => {\n    const getPokes = async () => {\n      const res = await fetchPokes(accessToken);\n      if (res.error) console.log(res.error);\n      if (res.pokes) setLoggedUsersPokes(res.pokes.reverse());\n    };\n    getPokes();\n    const interval = setInterval(async () => getPokes(), 5000);\n    pokesInterval.current = interval;\n    return () => clearInterval(pokesInterval.current);\n  };\n\n  const getLoggedUsersConversations = async (accessToken) => {\n    const getConversations = async () => {\n      const res = await fetchConversations(accessToken);\n      if (res.error) console.log(res.error);\n      if (res.conversations) setLoggedUsersConversations(res.conversations);\n    };\n    getConversations();\n    const interval = setInterval(async () => getConversations(), 5000);\n    conversationsInterval.current = interval;\n    return () => clearInterval(conversationsInterval.current);\n  };\n\n  return (\n    <BrowserRouter>\n      <Header\n        setAccessToken={setAccessToken}\n        accessToken={accessToken}\n        loggedUser={loggedUser}\n        loggedUsersPokes={loggedUsersPokes}\n        loggedUsersConversations={loggedUsersConversations}\n      />\n      <main>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() =>\n              accessToken ? (\n                <Redirect to=\"/search\" />\n              ) : (\n                <Login\n                  setAccessToken={setAccessToken}\n                  setLoggedUser={setLoggedUser}\n                />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/registration\"\n            render={() =>\n              accessToken ? (\n                <Redirect to=\"/search\" />\n              ) : (\n                <Registartion setAccessToken={setAccessToken} />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/search\"\n            exact\n            render={() =>\n              accessToken ? (\n                <Search accessToken={accessToken} loggedUser={loggedUser} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/user/:id\"\n            exact\n            render={() =>\n              accessToken ? (\n                <User accessToken={accessToken} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/basket\"\n            render={() =>\n              accessToken ? (\n                <Basket accessToken={accessToken} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/me\"\n            exact\n            render={() =>\n              accessToken ? (\n                <Me accessToken={accessToken} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/me/books\"\n            render={() =>\n              accessToken ? (\n                <MeBooks accessToken={accessToken} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/me/pokes\"\n            render={() =>\n              accessToken ? (\n                <Pokes\n                  accessToken={accessToken}\n                  loggedUsersPokes={loggedUsersPokes}\n                  setLoggedUsersPokes={setLoggedUsersPokes}\n                  loggedUser={loggedUser}\n                />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/me/conversations\"\n            exact\n            render={() =>\n              accessToken ? (\n                <Conversations\n                  accessToken={accessToken}\n                  loggedUser={loggedUser}\n                  loggedUsersConversations={loggedUsersConversations}\n                />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/me/conversations/conversation\"\n            render={() =>\n              accessToken ? (\n                <SingleConversation\n                  accessToken={accessToken}\n                  getLoggedUsersConversations={getLoggedUsersConversations}\n                  conversationsInterval={conversationsInterval}\n                />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route\n            path=\"/me/basket\"\n            render={() =>\n              accessToken ? (\n                <MeBaskets accessToken={accessToken} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          ></Route>\n          <Route render={() => <Error />}></Route>\n        </Switch>\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}